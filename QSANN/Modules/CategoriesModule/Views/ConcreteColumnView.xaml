<UserControl x:Class="CategoriesModule.Views.ConcreteColumnView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:prism="http://prismlibrary.com/"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:converters="clr-namespace:QSANN.Core.Converters;assembly=QSANN.Core"
             xmlns:validations="clr-namespace:QSANN.Core.ValidationRules;assembly=QSANN.Core"
             prism:ViewModelLocator.AutoWireViewModel="True">

    <UserControl.Resources>
        <converters:StringToBooleanConverter x:Key="stringToBooleanConverter" />
        <converters:DecimalToBooleanConverter x:Key="decimalToBooleanConverter" />
        <converters:BoolToVisibleOrHidden x:Key="booleanToVisibilityConverter" />
    </UserControl.Resources>
    <materialDesign:DialogHost>

        <AdornerDecorator>
            <StackPanel Orientation="Vertical" Name="ConcreteColumn">
                <TextBlock Margin="0,20,0,0"
                       Padding="5"
                       Text="Length of Column?" />

                <TextBox Style="{StaticResource MaterialDesignOutlinedTextBox}"
                     VerticalAlignment="Top"
                     Height="50"
                     TextWrapping="Wrap"
                     materialDesign:HintAssist.Hint="3m">
                    <TextBox.Text>
                        <Binding Path="InputModel.LengthOfColumn"
                             UpdateSourceTrigger="LostFocus">
                            <Binding.ValidationRules>
                                <validations:RequiredNumericRule InitialMessage="This field is required"
                                                             ErrorMessage="Invalid value for Length of Column"
                                                             ValidatesOnTargetUpdated="True"/>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>

                <TextBlock Margin="0,20,0,0"
                       Padding="5"
                       Text="Width of Column?" />

                <TextBox Style="{StaticResource MaterialDesignOutlinedTextBox}"
                     VerticalAlignment="Top"
                     Height="50"
                     TextWrapping="Wrap"
                     materialDesign:HintAssist.Hint="3m">
                    <TextBox.Text>
                        <Binding Path="InputModel.WidthOfColumn"
                             UpdateSourceTrigger="LostFocus">
                            <Binding.ValidationRules>
                                <validations:RequiredNumericRule InitialMessage="This field is required"
                                                             ErrorMessage="Invalid value for Width of Column"
                                                             ValidatesOnTargetUpdated="True" />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>

                <TextBlock Margin="0,20,0,0"
                       Padding="5"
                       Text="Height of Column?" />

                <TextBox Style="{StaticResource MaterialDesignOutlinedTextBox}"
                     VerticalAlignment="Top"
                     Height="50"
                     TextWrapping="Wrap"
                     materialDesign:HintAssist.Hint="3m">
                    <TextBox.Text>
                        <Binding Path="InputModel.HeightOfColumn"
                             UpdateSourceTrigger="LostFocus">
                            <Binding.ValidationRules>
                                <validations:RequiredNumericRule InitialMessage="This field is required"
                                                             ErrorMessage="Invalid value for Height of Column"
                                                             ValidatesOnTargetUpdated="True" />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>

                <TextBlock Margin="0,20,0,0"
                       Padding="5"
                       Text="Numbers of Count/s?" />

                <TextBox Style="{StaticResource MaterialDesignOutlinedTextBox}"
                     VerticalAlignment="Top"
                     Height="50"
                     Margin="0,0,0,20"
                     TextWrapping="Wrap"
                     materialDesign:HintAssist.Hint="3">
                    <TextBox.Text>
                        <Binding Path="InputModel.NumbersOfCount"
                             UpdateSourceTrigger="LostFocus">
                            <Binding.ValidationRules>
                                <validations:RequiredNumericRule InitialMessage="This field is required"
                                                             ErrorMessage="Invalid value for Number of Count\s"
                                                             ValidatesOnTargetUpdated="True" />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>

                <TextBlock Padding="5"
                       Text="Class Mixture" />

                <StackPanel Orientation="Horizontal"
                        Margin="0,0,0,10">

                    <RadioButton Margin="5"
                             GroupName="CONC_COL_CM"
                             Style="{StaticResource MaterialDesignRadioButton}"
                             Tag="True"
                             IsChecked="{Binding InputModel.ClassMixture, Converter={StaticResource stringToBooleanConverter}, ConverterParameter=AA}"
                             Content="AA">
                    </RadioButton>

                    <RadioButton Margin="5"
                             GroupName="CONC_COL_CM"
                             Style="{StaticResource MaterialDesignRadioButton}"
                             Tag="True"
                             IsChecked="{Binding InputModel.ClassMixture, Converter={StaticResource stringToBooleanConverter}, ConverterParameter=A}"
                             Content="A">
                    </RadioButton>

                    <RadioButton Margin="5"
                             GroupName="CONC_COL_CM"
                             Style="{StaticResource MaterialDesignRadioButton}"
                             Tag="True"
                             IsChecked="{Binding InputModel.ClassMixture, Converter={StaticResource stringToBooleanConverter}, ConverterParameter=B}"
                             Content="B">
                    </RadioButton>

                    <RadioButton Margin="5"
                             GroupName="CONC_COL_CM"
                             Style="{StaticResource MaterialDesignRadioButton}"
                             Tag="True"
                             IsChecked="{Binding InputModel.ClassMixture, Converter={StaticResource stringToBooleanConverter}, ConverterParameter=C}"
                             Content="C">
                    </RadioButton>
                </StackPanel>

                <Button Command="{Binding CalculateCommand}">Calculate</Button>

                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="5*" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <GroupBox Visibility="{Binding IsResultVisible, Converter={StaticResource booleanToVisibilityConverter}}"
                          Grid.Column="1"
                          Width="Auto"
                          VerticalAlignment="Center"
                          HorizontalAlignment="Center"
                          Header="Result"
                          Margin="16">
                        <GroupBox.Content>
                            <StackPanel>
                                <!--Cement-->
                                <TextBlock FontSize="32"
                                       Text="{Binding OutputModel.CementMixture}" />
                                <!--Sand-->
                                <TextBlock FontSize="32"
                                       Text="{Binding OutputModel.Sand}" />
                                <!--Gravel-->
                                <TextBlock FontSize="32"
                                       Text="{Binding OutputModel.Gravel}" />
                            </StackPanel>
                        </GroupBox.Content>
                    </GroupBox>
                </Grid>
            </StackPanel>
        </AdornerDecorator>
    </materialDesign:DialogHost>
</UserControl>